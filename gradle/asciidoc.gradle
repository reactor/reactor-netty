/*
 * Copyright (c) 2011-2021 VMware, Inc. or its affiliates, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'org.asciidoctor.jvm.convert'
apply plugin: 'org.asciidoctor.jvm.pdf'

// This configuration applies both to the asciidoctor & asciidoctorPdf tasks
asciidoctorj {
	options = [doctype: 'book']
	attributes 'allow-uri-read': '',
			'attribute-missing': 'warn',
			'project-version': "${project.version}",
			'reactorReleaseTrain': "${bomVersion}"
}

asciidoctor {
	sourceDir "$rootDir/docs/asciidoc/"
	sources {
		include "index.asciidoc"
	}
	baseDirFollowsSourceDir()
	resources {
		from(sourceDir) {
			include 'images/**'
			include 'highlight/**/*'
		}
	}
	outputDir file("$buildDir/asciidoc")
	logDocuments = true
	attributes stylesdir: "stylesheets/",
			stylesheet: 'reactor.css',
			'source-highlighter': 'highlightjs',
			'highlightjsdir': "./highlight",
			'highlightjs-theme': 'railscasts'
}

asciidoctorPdf {
	onlyIf { System.getenv()["GITHUB_ACTION"] != null || !rootProject.version.toString().endsWith("-SNAPSHOT") || rootProject.hasProperty("forcePdf") }
	sourceDir "$rootDir/docs/asciidoc/"
	sources {
		include "index.asciidoc"
	}
	baseDirFollowsSourceDir()
	outputDir file("$buildDir/asciidoc/pdf")
	logDocuments = true
	attributes 'source-highlighter': 'rouge'
}

task docsZip(type: Zip, dependsOn: [asciidoctor, asciidoctorPdf]) {
	archiveBaseName.set("reactor-netty")
	archiveClassifier.set("docs")
	afterEvaluate() {
		//we copy the pdf late, when a potential customVersion has been applied to rootProject
		from(asciidoctorPdf) {
			into("docs/")
			rename("index.pdf", "reactor-netty-reference-guide-${rootProject.version}.pdf")
		}
	}
	from(asciidoctor) { into("docs/") }
}