name: Check Matrix

on:
  pull_request: {}
permissions: read-all
jobs:
# Temporary disable and execute it in the main builds as the build depends on Netty 5 SNAPSHOT
#  preliminary:
#    name: preliminary sanity checks
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0 #needed by spotless
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: 17
#      - name: spotless (license header)
#        if: always()
#        run: ./gradlew clean spotlessCheck -PspotlessFrom=origin/${{ github.base_ref }}
#      - name: api compatibility
#        if: always()
#        run: ./gradlew clean japicmp
#      - name: how to fix
#        if: failure()
        # the foreground (38;5) color code 208 is orange. we also have bold, white bg (38;5;0;48;5;255m), white fg on black bg...
#        run: |
#          echo -e "\n\033[38;5;0;48;5;208m \u001b[1m How to deal with errors in preliminary job: \u001b[0m\033[0m"
#          echo "(Have a look at the steps above to see what failed exactly)"
#          echo -e "\n - \u001b[1mSpotless (license headers)\u001b[0m failures on touched java files \033[38;5;255;48;5;0m\u001b[1mcan be automatically fixed by running\u001b[0m:"
#          echo -e "   \033[38;5;0;48;5;255m ./gradlew spotlessApply \033[0m"
#          echo -e "\n - \u001b[1mAPI Compatibility\u001b[0m failures should be considered carefully and \033[38;5;255;48;5;0m\u001b[1mdiscussed with maintainers in the PR\u001b[0m"
#          echo "   If there are failures, the detail should be available in the logs of the api compatibility step above"
#          echo ""
#          exit -1

  build:
#    needs: preliminary
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
        transport: [native, nio]
        exclude:
          # excludes native on Windows (there's none)
          - os: windows-2019
            transport: native
          # macOS - https://github.com/netty/netty/issues/9689
          #- os: macos-10.15
          #  transport: native
    steps:
      - uses: actions/checkout@v3
        with:
          path: reactor-netty
          fetch-depth: 0 #needed by spotless
      - uses: actions/checkout@v3
        with:
          # TODO temporary https://github.com/netty-contrib/codec-haproxy/pull/9
          repository: violetagg/codec-haproxy
          path: codec-haproxy
          ref: use-asStage
      - uses: actions/checkout@v3
        with:
          # TODO temporary https://github.com/netty-contrib/codec-extras/pull/10
          repository: violetagg/codec-extras
          path: codec-extras
          ref: use-asStage
      - uses: actions/checkout@v3
        with:
          # TODO temporary https://github.com/netty-contrib/socks-proxy/pull/12
          repository: violetagg/socks-proxy
          path: socks-proxy
          ref: use-asStage
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Build codec-haproxy
        run: ./mvnw install -DskipTests=true "-Dnetty.version=5.0.0.Alpha3"
        working-directory: ./codec-haproxy
      - name: Build codec-extras
        run: ./mvnw install -DskipTests=true "-Dnetty.version=5.0.0.Alpha3"
        working-directory: ./codec-extras
      - name: Build socks-proxy
        run: ./mvnw install -DskipTests=true "-Dnetty.version=5.0.0.Alpha3"
        working-directory: ./socks-proxy
      - name: Build with Gradle
        run: ./gradlew clean check --no-daemon -PforceTransport=${{ matrix.transport }} -PspotlessFrom=origin/netty5
        working-directory: ./reactor-netty