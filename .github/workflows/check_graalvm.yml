name: GraalVM smoke tests

on:
  pull_request: {}
permissions: read-all
jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2022]
        transport: [native, nio]
        exclude:
          # excludes native on Windows (there's none)
          - os: windows-2022
            transport: native

    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      - name: Set up JDK 1.8
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Download GraalVM 17
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            download_url="https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-17.0.9/graalvm-community-jdk-17.0.9_linux-x64_bin.tar.gz"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            download_url="https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-17.0.9/graalvm-community-jdk-17.0.9_macos-x64_bin.tar.gz"
          else
            download_url="https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-17.0.9/graalvm-community-jdk-17.0.9_windows-x64_bin.zip"
          fi
          curl -L $download_url --output $RUNNER_TEMP/java_package.tar.gz
        shell: bash
      - name: Set up GraalVM 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
            distribution: 'jdkfile'
            jdkFile: ${{ runner.temp }}/java_package.tar.gz
            java-version: '17'
      - name: Build with Gradle
        run: ./gradlew :reactor-netty-graalvm-smoke-tests:nativeTest --no-daemon -PforceTransport=${{ matrix.transport }}